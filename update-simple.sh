#!/bin/bash

# Script simplificado para atualiza√ß√£o de c√≥digo sem backup complexo

set -e

# Fun√ß√µes de log
log_info() {
    echo -e "\e[34m[INFO]\e[0m $1"
}

log_success() {
    echo -e "\e[32m[SUCCESS]\e[0m $1"
}

log_error() {
    echo -e "\e[31m[ERROR]\e[0m $1"
}

echo "üîÑ ATUALIZA√á√ÉO SIMPLES DE C√ìDIGO"
echo "================================"

# Detecta container rodando
CONTAINER_NAME=$(docker ps | grep moburb | awk '{print $NF}' | head -1)

if [ -z "$CONTAINER_NAME" ]; then
    log_error "‚ùå Nenhum container moburb encontrado"
    log_info "Execute primeiro: ./deploy.sh"
    exit 1
fi

log_info "Container encontrado: $CONTAINER_NAME"

# M√©todo simples: rebuild com cache + restart
log_info "1. Fazendo rebuild com cache (r√°pido)..."
docker-compose -f docker-compose.yml build

log_info "2. Aplicando mudan√ßas sem perder dados..."
docker-compose -f docker-compose.yml up -d --no-deps moburb-app

log_info "3. Aguardando aplica√ß√£o inicializar..."
sleep 20

# Verifica se funcionou
log_info "4. Verificando aplica√ß√£o..."
for i in {1..15}; do
    if curl -f http://localhost:3500/api/health >/dev/null 2>&1; then
        log_success "‚úÖ Atualiza√ß√£o aplicada com sucesso!"
        break
    fi
    
    if [ $i -eq 15 ]; then
        log_error "‚ùå Aplica√ß√£o n√£o respondeu ap√≥s atualiza√ß√£o"
        log_info "Verificando logs..."
        docker logs $CONTAINER_NAME --tail=20
        exit 1
    fi
    
    log_info "Tentativa $i/15..."
    sleep 3
done

log_success "üéâ C√ìDIGO ATUALIZADO!"
echo ""
echo "üìä Resumo:"
echo "   ‚Ä¢ M√©todo: Rebuild com cache"
echo "   ‚Ä¢ Container: $CONTAINER_NAME"
echo "   ‚Ä¢ Tempo: ~2-3 minutos"
echo "   ‚Ä¢ Dados: Preservados"
echo ""
echo "üåê Aplica√ß√£o dispon√≠vel:"
echo "   http://localhost:3500"
